import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Pc
 */
public class Gaus extends javax.swing.JFrame {

    int n;
    DefaultTableModel modelo = new DefaultTableModel();
    Boolean ban = false;

    public int getN() {
        return n;
    }

    public void setN(int n) {
        this.n = n;
    }

    /**
     * Creates new form Gaus
     */
    public Gaus() {
        initComponents();
        this.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldN = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(182, 151, 191));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "MetodosNumericos"));
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Numero de incognitas");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(50, 100, 140, 20);
        jPanel1.add(jTextFieldN);
        jTextFieldN.setBounds(200, 100, 80, 30);

        jButton1.setText("Generar matriz");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(60, 130, 120, 23);

        jTable.setBackground(new java.awt.Color(204, 204, 255));
        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "x"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 160, 350, 240);

        jButton2.setText("Borrar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(760, 580, 90, 23);

        jButton3.setText("Resolver");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(140, 410, 90, 23);

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jScrollPane2.setViewportView(jTextArea);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(380, 20, 780, 560);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Generadora de matrices");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 20, 280, 40);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1170, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        try {

            this.setN(Integer.parseInt(jTextFieldN.getText()));
            n = this.getN();

            if (n <= 1) {
                throw new Exception("Numero de incognitas no valido");

            }

            Object columna[] = new Object[n + 1];

            for (int i = 0; i < n + 1; i++) {
                if (i < n) {
                    columna[i] = "X" + (i + 1);
                } else {
                    columna[i] = "R";
                }
            }

            modelo = new DefaultTableModel(columna, n);
            jTable.setModel(modelo);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        // TODO add your handling code here:
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         

        try {
            int n = this.getN();
            double m[][] = new double[n][n];
            double r[] = new double[n];

            for (int i = 0; i < n; i++) {

                for (int j = 0; j < n; j++) {
                    m[i][j] = Double.parseDouble(String.valueOf(jTable.getValueAt(i, j)));

                }
                r[i] = Double.parseDouble(String.valueOf(jTable.getValueAt(i, n)));
            }
            r = this.resolver(m, r);
            
            for(int i = 0; i < n; i++){
                jTextArea.append("x" + (i+1) + "" + r[i] + "\n");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Hay un error en la lectura de datos");

            
            
            
        }
// TODO add your handling code here:


    }                                        

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        
        jButton2.setText("");
    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gaus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gaus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gaus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gaus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gaus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTextField jTextFieldN;
    // End of variables declaration                   

    private double[] resolver(double[][] m, double[] r) {
        int n = this.getN();
        for (int i = 0; 1 < n; i++) {
            double d, c = 0;
            d = m[i][i];
            jTextArea.append(Double.toString(1 / d) + "fila" + (1 + 1) + "\n");
            for (int j = 0; j < n; j++) {
                m[j][j] = ((m[i][j]) / d);
            }
            r[i] = ((r[i]) / d);

            for (int j = 0; j < n; j++) {

                for (int k = 0; k < n; k++) {
                    jTextArea.append(Double.toString(m[j][k]) + "\t");
                }
                jTextArea.append("1\t" + Double.toString(r[j]) + "\n");
            }
            jTextArea.append("\n\n");

            for (int x = 0; x < n; x++) {
                if (i != x) {
                    c = m[x][i];
                    jTextArea.append("-" + Double.toString(c) + " * fila" + (x + 1) + "\n");
                    for (int y = 0; y < n; y++) {
                        m[x][y] = m[x][y] - c * m[i][y];
                    }
                    r[x] = r[x] - c * r[i];

                    for (int j = 0; j < n; j++) {
                        for (int k = 0; k < n; k++) {

                            jTextArea.append(Double.toString(m[j][k]) + "\t");

                        }
                        jTextArea.append("\t" + Double.toString(r[j]) + "\n");
                    }
                    jTextArea.append("\n\n");
                }
            }

        }
        return r;

    }
}
